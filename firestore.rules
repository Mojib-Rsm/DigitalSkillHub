
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // PUBLIC: Allow anyone to read these collections
    match /courses/{courseId} {
      allow read: if true;
      allow write: if false; 
    }
    match /blog/{postId} {
      allow read: if true;
      allow write: if false;
    }
    match /jobs/{jobId} {
      allow read: if true;
      allow write: if false;
    }
     match /pricing/{planId} {
      allow read: if true;
      allow write: if false;
    }
     match /testimonials/{testimonialId} {
      allow read: if true;
      allow write: if false;
    }

    // HISTORY: Users can only access their own history
    match /history/{historyId} {
      allow read, delete: if isAuthenticated() && request.auth.uid == resource.data.uid;
      allow create: if isAuthenticated() && request.auth.uid == request.resource.data.uid;
    }
    
    // USERS: Users can read their own data, but not others. No one can write directly.
    match /users/{userId} {
        allow read: if isAuthenticated() && request.auth.uid == userId;
        allow create, update, delete: if false; // Cannot be changed from client
    }
    
    // Default deny all other reads/writes
    match /{document=**} {
      allow read, write: if false;
    }
  }
}

    