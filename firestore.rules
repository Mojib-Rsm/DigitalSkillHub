
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // USERS collection
    match /users/{userId} {
      allow read: if request.auth.uid == userId || isAdmin();
      allow update: if request.auth.uid == userId;
      allow create, delete: if false; // Disallow client-side creation/deletion
    }

    // HISTORY collection
    match /history/{historyId} {
        allow read, create: if request.auth.uid == request.resource.data.uid;
        allow update, delete: if false; // History is immutable
    }

    // Public collections (read-only for everyone)
    match /courses/{courseId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /blog/{postId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /jobs/{jobId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /pricing/{planId} {
        allow read: if true;
        allow write: if isAdmin();
    }
    match /testimonials/{testimonialId} {
        allow read: if true;
        allow write: if isAdmin();
    }
    match /tools/{toolId} {
        allow read: if true;
        allow write: if isAdmin();
    }
    
    // Seed status document
    match /seed/status {
      allow write: if request.auth != null; // Allow any authenticated user to trigger seed
      allow read: if true;
    }
  }
}

    